extends ../layout
include ../includes/mixins.jade


block content
  div.container
    div.row
      div.col-md-10
        h1(id="GeneInfo") #{gene[0].HUGO_GENE_SYMBOL} 
        hr
        div.row
          dl.dl-horizontal.col-md-6
            dt(id='GeneDescription') Description
            dd #{gene[0].DESCRIPTION}
            dt(id="EntrezLink") Entrez 
            dd
              a(href = 'http://www.ncbi.nlm.nih.gov/gene/' + gene[0].ENTREZ_GENE_ID) #{gene[0].ENTREZ_GENE_ID} 
            dt(id="EnsemblLink") Ensembl 
            dd 
              a(href = 'http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=' + gene[0].ENSEMBL_GENE_ID) #{gene[0].ENSEMBL_GENE_ID}
            dt(id="UniprotLink") Uniprot
            dd
              a(href = 'http://www.uniprot.org/uniprot/' + gene[0].UNIPROT_SWISSPROT_ID) #{gene[0].UNIPROT_SWISSPROT_ID}
            dt(id="OmimLink") Omim
            dd
              a(href = 'http://www.omim.org/entry/' + gene[0].OMIM_ID) #{gene[0].OMIM_ID}
          div.col-md-6(id='protein-domain-graph')
        hr
        div.row(id="GeneInteraction") 
          div.col-md-4(id='y2h-interaction')
          div.col-md-6(id='lumier-interaction')
        div(id="VariantListing")
          if variant
            - for item in variant
              - var MUT_HGVS_AA = item['MUT_HGVS_AA_ID'].split('.').pop(-1)
              - var MUT_HGVS_NT = item['MUT_HGVS_NT_ID'].split('.').pop(-1)
                div.row
                  h4(id=MUT_HGVS_AA)
                    a(href = '/variant/' + item.MUT_HGVS_NT_ID)= MUT_HGVS_NT
                    span.glyphicon.glyphicon-menu-right
                    span= MUT_HGVS_AA
                  div.dl-horizontal.col-md-6
                    if item.CHR_COORDINATE_HG19
                      dt Chromosomal location 
                      dd
                        a(href="http://genome.ucsc.edu/cgi-bin/hgTracks?org=human&db=hg19&position=" + item.CHR_COORDINATE_HG19) #{item.CHR_COORDINATE_HG19}
                    if item.REFSEQ_ID
                      dt RefSeq 
                      dd 
                        a(href='http://www.ncbi.nlm.nih.gov/nuccore/' + item.REFSEQ_ID) #{item.REFSEQ_ID}
                    if item.CCSB_MUTATION_ID
                      dt CCSB mutation ID 
                      dd #{item.CCSB_MUTATION_ID}
                    if item.DBSNP_ID
                      dt dbSNP ID 
                      dd 
                        a(href = 'http://www.ncbi.nlm.nih.gov/snp/?term=' + item.DBSNP_ID) #{item.DBSNP_ID}
                    if item.EXAC_ALLELE_FREQUENCY
                      dt Exac allele freq 
                      dd #{item.EXAC_ALLELE_FREQUENCY}
                    hr
                  div.col-md-6
      nav.col-md-2.bs-docs-sidebar.hidden-print(id='target_nav')
        ul.nav.nav-stacked.bs-docs-sidenav.fixed(id="sidebar")
          +nav_item("#GeneInfo") Gene
            ul.nav.nav-stacked(id="sidebar")
              +nav_item("#GeneDescription") Info
              +nav_item("#GeneInteraction") Interaction
          +nav_item("#VariantListing") Variants 
            ul.nav.nav-stacked(id="sidebar")
              - for item in variant
                - var MUT_HGVS_AA = item['MUT_HGVS_AA_ID'].split('.').pop(-1)
                  +nav_item("#" + MUT_HGVS_AA) #{MUT_HGVS_AA}
              
block script 
  script(type='text/javascript').
    var y2hInteractionConfig = {
      "height": 300,
      "width": 333,
      "targetDOM": "#y2h-interaction",
      "nodeRadius": 5,
      "textSize": 12
    }
    var proteinDomainConfig = {
      "height": 125,
      "width": 460,
      "targetDOM": "#protein-domain-graph",
      "xoffset": 10,
      "yoffset": 90,
      "regionHeight": 15,
      "regionBGHeight": 10,
      "stickHeight": 20,
      "headRadius": 5,
      "regionFontSize": "10px",
      "headFontSize": "10px"
    }  
    var y2hInteractionData =!{JSON.stringify(forceGraphData)}
    if(y2hInteractionData.links.length !== 0 && y2hInteractionData.nodes.length !== 0){
      var y2hForceGraph = new forceGraph(y2hInteractionData, y2hInteractionConfig)
    }
    
    var proteinDomainData =!{JSON.stringify(proteinDomainData)}
    if(proteinDomainData.region.length !== 0 && proteinDomainData.mutation.length !== 0){
      proteinDomainData.length = proteinDomainData.region[0].proteinLength
      var pg = new proteinDomainGraph(proteinDomainData, proteinDomainConfig)
    }
    
    
    
    

// test for proteinDomain graph
//- var proteinDomainData = {
//-   "length": "1000",
//-   "region": [{
//-     "name": "Peptidase_S8",
//-     "start": "159",
//-     "end": "361",
//-     "color": "#dd8352"
//-   },{
//-     "name": "PA",
//-     "start": "388",
//-     "end": "469"
//-   }],
//-   "mutation": [{
//-     "name": "N159K"
//-   }]
//- }
// test for interaction graph
//- var data = {
//-   links: [
//-     {source: 1, target: 2, score: 1},
//-     {source: 1, target: 3, score: 1},
//-     {source: 2, target: 1, score: 1},
//-     {source: 3, target: 3, score: 1}
//-   ],
//-   nodes: [
//-     {Name: 'node1', ID: 1},
//-     {Name: 'node2', ID: 2},
//-     {Name: 'node3', ID: 3}
//-   ]
//- }
--//
